rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAdmin() {
      return request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Emetric collections
    match /emetric_metrics/{metricId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    match /emetric_sources/{sourceId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    match /emetric_data/{dataId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }

    match /emetric_user_preferences/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    match /board_posts/{postId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if request.auth != null && (
        request.auth.uid == resource.data.authorId || 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true ||
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['commentCount']) 
      );
      allow delete: if request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;

      match /comments/{commentId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update, delete: if request.auth != null && 
          (request.auth.uid == resource.data.authorId || 
           get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true);
      }
    }
    match /blog_posts/{postId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if request.auth != null;
      allow delete: if request.auth != null;
    }
    match /users/{userId} {
      allow read: if request.auth != null && 
        (request.auth.uid == userId || 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true);
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update: if request.auth != null && request.auth.uid == userId;
    }
  }
}
